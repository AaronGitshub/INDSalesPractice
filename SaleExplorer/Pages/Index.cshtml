@page
@model IndexModel

<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title>Sales Explorer</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://api.mapbox.com/mapbox-gl-js/v1.1.0-beta.1/mapbox-gl.js'></script>

    <link href='https://api.mapbox.com/mapbox-gl-js/v1.1.0-beta.1/mapbox-gl.css' rel='stylesheet' />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />

    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="selections"></div>
    <div id='map'></div>

    <div id="info-card" class="absolute pin-t pin-l mt-4 ml-4 rounded shadow-lg bg-white" style="max-width: 400px; display: none;">
        <div>
            <span class="absolute pin-t pin-r px-4 py-3">
                <i id="info-card-close-button" class="fa fa-times" role="button" aria-hidden="true"></i>
            </span>
            <img class="" src="http://via.placeholder.com/400x200?text=No+Picture+Found" />
        </div>
        <div class="px-6 py-4">
            <div id="sale-street" class="font-bold text-l">Sale Address goes here</div>
            <div id="sale-price" class="font-bold text-l">Price goes here</div>
            <div id="sale-buyer1" class="font-bold text-l">Buyer 1 goes here</div>
        </div>
    </div>

    <script>
        mapboxgl.accessToken = '@Model.MapboxAccessToken';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [-86.158066, 39.768402],
            zoom: 10
        });

        var nav = new mapboxgl.NavigationControl();
map.addControl(nav, 'bottom-right');

        map.on('load',
            () => {
    // Code to be executed after the map has loaded
     map.addSource("sales",
    {
        type: "geojson",
        data: "?handler=Sales",
        cluster: true, // Enable clustering
        clusterRadius: 50, // Radius of each cluster when clustering points
        clusterMaxZoom: 6 // Max zoom to cluster points on
});

        map.addLayer({
    id: 'sales',
    type: 'circle',
    source: 'sales',
                paint: {
                    'circle-color': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, '#41A337'],
                            [100, '#2D7026'],
                            [750, '#0B5703'],
                        ]
                    },
                    'circle-radius': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, 20],
                            [100, 30],
                            [750, 40]
                        ]
                    }
                }
        });
            map.addLayer({
                id: 'cluster-count',
                type: 'symbol',
                source: 'sales',
                filter: ['has', 'point_count'],
                layout: {
                    'text-field': '{point_count}',
                    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
                    'text-size': 12
                }
            });

            map.addLayer({
                id: 'sales',
                type: 'circle',
                source: 'sales',
                filter: ['!has', 'point_count'],
                paint: {
                    'circle-color': '#1EF008',
                    'circle-radius': 6,
                    'circle-stroke-width': 1,
                    'circle-stroke-color': '#fff'
                }
            });

            var popup = new mapboxgl.Popup({
            closeButton: false,
            closeOnClick: false
            });
                    map.on('mouseenter', 'sales', function(e) {
            // Change the cursor style as a UI indicator.
            map.getCanvas().style.cursor = 'pointer';

            // Populate the popup and set its coordinates
            // based on the feature found.
            popup.setLngLat(e.features[0].geometry.coordinates)
                .setHTML(e.features[0].properties.saleStreet)
                .addTo(map);
        });

        map.on('mouseleave', 'sales', function() {
            map.getCanvas().style.cursor = '';
            popup.remove();
        });
                map.on('click', 'sales', e => {
                    var saleStreet = e.features[0].properties.saleStreet;
                    var salesPrice = e.features[0].properties.salesPrice;
                    var saleCity = e.features[0].properties.saleCity;
                    var buyer1 = e.features[0].properties.buyer1;
                    var lat = e.features[0].geometry.coordinates[1];
                    var longitude = e.features[0].geometry.coordinates[0];
                    //Display Sale info
                    document.querySelector('#sale-street').innerText = saleStreet + ", " + saleCity + ", IN";
                    document.querySelector('#sale-price').innerText = "Sale Price: " + salesPrice;
                    document.querySelector('#sale-buyer1').innerText = "Buyer 1: " + buyer1;
                    //Ensure the info box is visible
                    document.querySelector('#info-card').style.display = '';
                });
            });
        document.querySelector('#info-card-close-button').addEventListener('click', function(event) {
    document.querySelector('#info-card').style.display = 'none';
});
    </script>

</body>
</html>